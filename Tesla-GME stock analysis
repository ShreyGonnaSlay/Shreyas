!pip install yfinance
!pip install pandas
!pip install requests
!pip install bs4
!pip install plotly
import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data.Date, infer_datetime_format=True), y=stock_data.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data.Date, infer_datetime_format=True), y=revenue_data.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()
tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)
print(tesla_data.head())
html_data = requests.get("https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue").text
tesla_soup = BeautifulSoup(html_data,'html.parser')
tesla_tables = tesla_soup.find_all('table')
tesla_revenue = pd.DataFrame(columns=["Date", "Revenue"])
print(len(tesla_tables))
for index,table in enumerate(tesla_tables):
if ("Tesla Quarterly Revenue" in str(table)):
        quarterly_revenue_index = index
        for row in tesla_tables[quarterly_revenue_index].tbody.find_all("tr"):
            col = row.find_all("td")
            if (col != []):
                date = col[0].text
                revenue = col[1].text
                revenue = col[1].text.replace("$", "").replace(",", "")
                tesla_revenue = tesla_revenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
                tesla_revenue.dropna(inplace=True)
                tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
print(tesla_revenue.tail())
gme = yf.Ticker("GME")
gme_data = gme.history(period="max")
gme_data.reset_index(inplace=True)
print(gme_data.head())
html_data  = requests.get("https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue").text
gme_soup = BeautifulSoup(html_data,'html.parser')
gme_tables = gme_soup.find_all('table')
gme_revenue = pd.DataFrame(columns=["Date", "Revenue"])
print(len(gme_tables))
quarterly_revenue_index_two = 0
for index,table in enumerate(gme_tables):
    if ("GameStop Quarterly Revenue" in str(table)):
        quarterly_revenue_index_two = index
        for row in gme_tables[quarterly_revenue_index_two].tbody.find_all("tr"):
            col = row.find_all("td")
            if (col != []):
                date = col[0].text
                revenue = col[1].text
                revenue = col[1].text.replace("$", "").replace(",", "")
                gme_revenue = gme_revenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
                gme_revenue.dropna(inplace=True)
                gme_revenue = gme_revenue[gme_revenue['Revenue']!= ""]
print(gme_revenue.tail())
print(type(tesla_data))
print(type(tesla_revenue))
make_graph(tesla_data, tesla_revenue, 'Tesla')
make_graph(gme_data, gme_revenue, 'GameStop')
